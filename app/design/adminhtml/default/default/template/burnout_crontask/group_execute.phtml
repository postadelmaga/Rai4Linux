<?php
/**
 * @var $this  BurnOut_Catalog_Block_Adminhtml_CronTask_GroupExecute
 *
 * Execute group tasks using javascript until every tasks are complete
 */
?>
<div>
    <div class="entry-edit" style="width: 50%;margin:0 auto;">
        <div class="entry-edit-head">
            <h4><?php if ($this->getGroup() != null): ?><?php echo $this->getGroup()->getbtg_description(); ?><?php else: ?><?php echo $this->__('Task group does not exist'); ?><?php endif; ?></h4>
        </div>
        <fieldset class="bold">
			<span class="a-left" style="font-size:18px;">
				<?php if ($this->getGroup() != null): ?>
                    <div id="progress_percent" style="width: 100%; text-align: center;">0 %</div>
                    <div id="back-link" style="text-align:center; display: none">
                        <a href="<?php echo $this->getFinishedUrl(); ?>">Go Back</a>
                    </div>
                <?php else: ?>
                    <a href="javascript:history.back();"><?php echo $this->__('Back'); ?></a>
                <?php endif; ?>
			</span>
        </fieldset>
        <?php if ($this->getGroup() != null): ?>
            <p id="message">
                <span id="status"
                      style="color:red"><?php echo $this->__('Please wait until tasks are complete...'); ?></span>

            </p>
        <?php endif; ?>
    </div>
</div>

<div>
    <h3>Results:</h3>
    <p id="result-messages"></p>
</div>

<script>
    <?php if ($this->getGroup() != null): ?>
    document.observe('dom:loaded', function () {
        executeTasks();
    });
    <?php endif; ?>

    function executeTasks() {
        var url = '<?php echo $this->getAjaxUrl(); ?>';
        var groupcode = '<?php echo $this->getGroupCode()?>';

        new Ajax.Request(url, {
                method: 'post',
                loaderArea: false,
                parameters: {group_code: groupcode},
                onCreate: showLoader(),
                onFailure: function (transport) {
                    executeTasks();
                    //alert('An error occured while executing tasks : ' + xhr.status + ' : ' + xhr.statusText);
                },

                onSuccess: function onSuccess(transport) {
                    //retrieve and display progress
                    try {
                        if (transport.responseText.isJSON()) {
                            var response = transport.responseText.evalJSON();
                            $('progress_percent').update(response.progress + ' % ');
                            $('result-messages').insert(response.messages);

                            if (response.error == 1) {
                                alert(response['error_message']);
                            }
                            //if not finished, re-call function
                            if (!response['finished']) {
                                executeTasks();
                            }
                            else {
                                $('status').hide();
                                $('back-link').show();
                            }
                        }
                    }
                    catch (e) {
                        alert(transport.responseText);
                    }
                },
            }
        );
    }

    function showLoader() {

        var mask = $('loading-mask');

        if (mask.visible() == false) {
            mask.style.position = 'initial';
            $$('.entry-edit')[0].insert({before: mask});


            var loader = $('loading_mask_loader');
            loader.style.position = 'initial';
            loader.style.left = 0 + 'px';
            loader.style.top = 0 + 'px';
            loader.style.marginLeft = 0;
            loader.style.margin = '0 auto';

            mask.show();
        }

    }
</script>

